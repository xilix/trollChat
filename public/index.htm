<!doctype html>
<html>
  <head>
    <title>Socket.IO chat</title>
    <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { font: 13px Helvetica, Arial; }
      .form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }
      .form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }
      .form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }
      ul.message-content { list-style-type: none; margin: 0; padding: 0; }
      .message-content li {
        padding: 5px;
        width: 100%;
        display: inline-block;
        text-align: right;
      }
      .message-content li span {
        border-radius: 5px;
        padding: 5px 10px;
        background: #eee;
      }
      .message-content li.msg-join {
        text-align: ccenter;
        font-weight: bold;
      }
      .message-content li.my-message {
        text-align: left;
      }
      .message-content li.my-message span {
        background: #8ec;
      }
    </style>
  </head>
  <body>
    <ul class='message-content' id="messages"></ul>
    <div class="form">
      <input id="m" autocomplete="off" name="m" />
      <button id="btn" onclick="sendMessage()">Send</button>
    </div>
    <script src="static/socket.io-client/socket.io.js"></script>
    <script>
      var socket = io(window.location.hostname + ':3000/{{channel}}');
      var authorization = '';

      var getAuthorization = function () {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (
            xhttp.readyState === 4 &&
            xhttp.status === 200 &&
            xhttp.responseText
          ) {
            authorizationCallback(JSON.parse(xhttp.responseText));
          }
        };
        xhttp.open("GET", "http://localhost:8080/auth", true);
        xhttp.send();
      }
      var authorizationCallback = function (auth) {
        authorization = auth;
        setTimeout(getAuthorization, auth.e * 1000 - 1);
      }

      var sendMessage = function () {
        socket.emit('push', {
          m: m.value,
          t: authorization.t
        });
        m.value = "";
        return false;
      };

      socket.on('join', function (msg) {
        // TODO: Move to angular
        if (msg.u !== authorization.u) {
        document.getElementById('messages').innerHTML += [
          '<li class="msg-join">',
            'user join to channel',
          '</li>'
        ].join('');
        }
      });
      socket.on('notify', function (msg) {
        // TODO: Move to angular
        document.getElementById('messages').innerHTML += [
          '<li class="msg',
            (msg.u === authorization.u ? ' my-message' : '')
          ,'">',
            '<span>', msg.m, '</span>',
          '</li>'
        ].join('');
      });

      getAuthorization();
      document.onkeypress = function (event) {
        if (event.charCode === 13) {
          sendMessage();
        }
      };
    </script>
  </body>
</html>
